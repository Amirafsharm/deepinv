name: test

on: 
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test_no_conda:
    name: Test without conda
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            version_python: 3.9
            coverage: 'true'
    env:
      VERSION_PYTHON: ${{ matrix.version_python }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ env.VERSION_PYTHON }}

      - name: Install deepinv and its dependencies
        run: |
          pip install -e .
          pip install pytest
      - name: Test with pytest
        run: |
          python -m pytest deepinv/tests
          
  test_conda:
    name: Test with conda
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            version_python: 3.9
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
        conda install -yq pip
        pip install -e .
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest and generate coverage report
      run: |
        conda install pytest
        conda install pytest-cov
        python -m pytest deepinv/tests
        pytest --cov=./ --cov-report=xml
         
    - name: Upload coverage to Codecov
      if: ${{ matrix.coverage == 'true' }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
          
  report_test:
    if: ${{ always() }}
    needs: [test_conda, test_no_conda]
    runs-on: ubuntu-latest
    env:
      TEST_CONDA: ${{ needs.test_conda.result }}
      TEST_NO_CONDA: ${{ needs.test_no_conda.result }}

    steps:
      - name: "Gather test results."
        run: |
          if [[ $TEST_CONDA == 'success' && $TEST_NO_CONDA == 'success' ]]; then
            exit 0;
          else
            exit 1;
          fi
        shell: bash
